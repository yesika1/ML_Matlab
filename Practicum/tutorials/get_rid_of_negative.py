# -*- coding: utf-8 -*-
"""get-rid-of-negative.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13a_7X2FLisJs8yRB6cgkIi45itPuxKxR
"""

import pandas as pd

df = pd.DataFrame({'x':[4,4,4],'y':[2,2,5]})

df

"""So you want to calculate x-y and replace negative by zero. You can do it using apply and defining function"""

def get_diff(row):
  if row['x'] < row['y']:
    return 0
  return row['x'] - row['y']

df['diff'] = df.apply(get_diff,axis=1)

df

"""But you should avoid custom functions and do everything native way. And the key to do it is to do it step by step."""

df = pd.DataFrame({'x':[4,4,4],'y':[2,2,5]})

"""At first just get the diffirence"""

df['x-y'] = df['x'] - df['y']

df

"""Second you want to get rid of negative. So let's google 'pandas replace negative values with 0' and find https://stackoverflow.com/questions/27759084/how-to-replace-negative-numbers-in-pandas-data-frame-by-zero . And among tons of methods choose one which you like. I like this one"""

df['x-y'].clip(lower=0)

df['x-y_clipped'] = df['x-y'].clip(lower=0)

df

"""You can combine it in one line if you want"""

df['diff'] = (df['x'] - df['y']).clip(lower=0)

df

"""Step by step is much more simple and easy to debug. Native step by step is a bro, custom function and apply is not a bro))."""